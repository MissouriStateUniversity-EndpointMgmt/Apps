## Install Info
$InstallArgs = "/S"

# GitHub Information
$repo = "ip7z/7zip"
$FileNamePattern = "*x64.exe"

## Uninstall Info
$UninstallName = "7-Zip*"
$UninstallArgs = "/S"
$Path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"

try {

 	if ($Action -ieq 'Install')
	{

        ## Uninstall MSI
        Install-PackageProvider -Name NuGet -Force | Out-Null
        Get-Package -Name $UninstallName -ErrorAction SilentlyContinue | Uninstall-Package
        
        ## Uninstall EXE
        Get-ChildItem -Path $Path -ErrorAction SilentlyContinue | Get-ItemProperty | Where-Object {$_.DisplayName -like $UninstallName} | Foreach { Start-Process $_.UninstallString -Wait -PassThru -ArgumentList $UninstallArgs }

        # Download new application file
        $ReleasesURL = "https://api.github.com/repos/$repo/releases/latest"
        $DownloadURI = ((Invoke-RestMethod -Method GET -Uri $ReleasesURL).assets | Where-Object name -like $FileNamePattern).browser_download_url
        $FilePath = Join-Path -Path (Get-Location).Path -ChildPath $(Split-Path -Path $DownloadURI -Leaf)
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri $DownloadURI -Out $FilePath -UseBasicParsing
		
		# Install
        Start-Process $FilePath -Wait -Passthru -ArgumentList $InstallArgs

	}
	elseif ($Action -ieq 'Remove')
	{

        ## Uninstall MSI
        Install-PackageProvider -Name NuGet -Force | Out-Null
        Get-Package -Name $UninstallName -ErrorAction SilentlyContinue | Uninstall-Package

        ## Uninstall EXE
        Get-ChildItem -Path $Path -ErrorAction SilentlyContinue | Get-ItemProperty | Where-Object {$_.DisplayName -like $UninstallName} | Foreach { Start-Process $_.UninstallString -Wait -PassThru -ArgumentList $UninstallArgs }

 	}

}
catch {

}
